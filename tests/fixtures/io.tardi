
uses: std/fs
uses: std/io
uses: std/vectors

"io/write-file"
"""
Hello, world!
Goodbye, cruel world!
""" "tmp/temporary-file.txt" write-file

"io/read-file"
"tmp/temporary-file.txt" read-file

"fs/rm"
"tmp/temporary-file.txt" rm

"fs/exists?"
"tmp/test-exists.txt" dup exists? swap
"something something" over write-file drop
dup exists?
swap rm drop

/// call the lambda with the filename and then delete the filename, if it exists.
/// filename lambda --
: clean-file
    over >r apply r>
    dup exists?
    [ rm ] when
    drop ;

"io/<writer>"
"tmp/another-temporary.txt" <writer>

"io/file-path>>"
over file-path>>

"io/close"
reach close
pick rm

"tmp/temporary-three.txt"
[ <writer> dup close ] clean-file

"fs/truncate"
"tmp/test-truncate.txt"
[
    "this has some content\n" over write-file drop
    dup truncate
    swap read-file drop
] clean-file

"io/write"
"tmp/test-write.txt"
[
    dup <writer>
    "some text to write" over write
    swap close drop
    swap read-file drop
] clean-file

"io/write-line"
/// writer content -- result-flag writer
: (write-line)   over write-line swap ;
"tmp/test-write-line.txt"
[
    dup <writer>
    { "first line" "second line" "third line" }
    [ (write-line) ] each
    close drop
    rotd swap
    read-file drop
] clean-file

"io/write-lines"
"tmp/test-write-lines.txt"
[
    dup <writer>
    { "first line" "second line" "third line" } over
    write-lines swap
    close drop swap
    read-file drop
] clean-file

"io/flush"
// Not sure how to test this really.

// TODO: worth having in std/io?
/// path lambda --
: with-reader
        [ <reader> ] dip
        over >r
        apply
        r> close drop ;

"tmp/test-all-reads.txt"
[
    "line 1\nline 2\nline 3\n" over write-file drop
    "io/<reader>" "io/read" rot
    [ [ read ] with-reader ] keep
    "io/read-line" swap
// "" "" c "" fp | fp
    [ read-line ] with-reader
] clean-file

// io/read-lines

// fs/mkdir
// fs/rmdir
// fs/ensure-dir
// fs/touch

// io/stdin
// io/stdout
// io/stderr
// io/print
// io/println
// io/nl
// io/eprint
// io/eprintln
// io/eln

// io/.
// io/.s
